// <auto-generated />
using System;
using Funtrip.Repositories.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Funtrip.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20181019002848_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Funtrip.Models.Actividad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("FechaHora");

                    b.Property<int?>("GrupoID");

                    b.HasKey("ID");

                    b.HasIndex("GrupoID");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("Funtrip.Models.Encuesta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GrupoID");

                    b.Property<string>("Opciones");

                    b.Property<string>("Pregunta");

                    b.HasKey("ID");

                    b.HasIndex("GrupoID");

                    b.ToTable("Encuestas");
                });

            modelBuilder.Entity("Funtrip.Models.FechaDisponibilidad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("FechaFin");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<int?>("GrupoID");

                    b.Property<int?>("UsuarioID");

                    b.HasKey("ID");

                    b.HasIndex("GrupoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("FechasDisponibilidad");
                });

            modelBuilder.Entity("Funtrip.Models.FondoComun", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Monto");

                    b.HasKey("ID");

                    b.ToTable("FondosComunes");
                });

            modelBuilder.Entity("Funtrip.Models.Grupo", b =>
                {
                    b.Property<int>("GrupoID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AdministradorUsuarioID");

                    b.Property<int?>("FondoComunID");

                    b.HasKey("GrupoID");

                    b.HasIndex("AdministradorUsuarioID");

                    b.HasIndex("FondoComunID");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Funtrip.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ActividadID");

                    b.Property<string>("Email");

                    b.Property<int?>("EncuestaID");

                    b.Property<string>("Nombre");

                    b.Property<string>("Pass");

                    b.HasKey("UsuarioID");

                    b.HasIndex("ActividadID");

                    b.HasIndex("EncuestaID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Funtrip.Models.UsuarioGrupo", b =>
                {
                    b.Property<int>("UsuarioID");

                    b.Property<int>("GrupoID");

                    b.HasKey("UsuarioID", "GrupoID");

                    b.HasIndex("GrupoID");

                    b.ToTable("UsuarioGrupo");
                });

            modelBuilder.Entity("Funtrip.Models.Actividad", b =>
                {
                    b.HasOne("Funtrip.Models.Grupo")
                        .WithMany("Actividades")
                        .HasForeignKey("GrupoID");
                });

            modelBuilder.Entity("Funtrip.Models.Encuesta", b =>
                {
                    b.HasOne("Funtrip.Models.Grupo")
                        .WithMany("Encuestas")
                        .HasForeignKey("GrupoID");
                });

            modelBuilder.Entity("Funtrip.Models.FechaDisponibilidad", b =>
                {
                    b.HasOne("Funtrip.Models.Grupo")
                        .WithMany("FechasDisponibilidad")
                        .HasForeignKey("GrupoID");

                    b.HasOne("Funtrip.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");
                });

            modelBuilder.Entity("Funtrip.Models.Grupo", b =>
                {
                    b.HasOne("Funtrip.Models.Usuario", "Administrador")
                        .WithMany()
                        .HasForeignKey("AdministradorUsuarioID");

                    b.HasOne("Funtrip.Models.FondoComun", "FondoComun")
                        .WithMany()
                        .HasForeignKey("FondoComunID");
                });

            modelBuilder.Entity("Funtrip.Models.Usuario", b =>
                {
                    b.HasOne("Funtrip.Models.Actividad")
                        .WithMany("Confirmados")
                        .HasForeignKey("ActividadID");

                    b.HasOne("Funtrip.Models.Encuesta")
                        .WithMany("Votaron")
                        .HasForeignKey("EncuestaID");
                });

            modelBuilder.Entity("Funtrip.Models.UsuarioGrupo", b =>
                {
                    b.HasOne("Funtrip.Models.Grupo", "Grupo")
                        .WithMany("UsuarioGrupos")
                        .HasForeignKey("GrupoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Funtrip.Models.Usuario", "Usuario")
                        .WithMany("UsuarioGrupos")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
